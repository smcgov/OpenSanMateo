#
# Apache/PHP/Drupal settings:
#

# Protect files and directories from prying eyes.
<FilesMatch "\.(engine|inc|info|install|make|module|profile|test|po|sh|.*sql|theme|tpl(\.php)?|xtmpl)(~|\.sw[op]|\.bak|\.orig|\.save)?$|^(\..*|Entries.*|Repository|Root|Tag|Template|composer\.(json|lock))$|^#.*#$|\.php(~|\.sw[op]|\.bak|\.orig\.save)$">
  Order allow,deny
</FilesMatch>

# Don't show directory listings for URLs which map to a directory.
Options -Indexes

# Follow symbolic links in this directory.
Options +FollowSymLinks

# Make Drupal handle any 404 errors.
ErrorDocument 404 /index.php

# Set the default handler.
DirectoryIndex index.php index.html index.htm

# Override PHP settings that cannot be changed at runtime. See
# sites/default/default.settings.php and drupal_environment_initialize() in
# includes/bootstrap.inc for settings that can be changed at runtime.

# PHP 5, Apache 1 and 2.
<IfModule mod_php5.c>
  php_flag magic_quotes_gpc                 off
  php_flag magic_quotes_sybase              off
  php_flag register_globals                 off
  php_flag session.auto_start               off
  php_value mbstring.http_input             pass
  php_value mbstring.http_output            pass
  php_flag mbstring.encoding_translation    off
</IfModule>

# Requires mod_expires to be enabled.
<IfModule mod_expires.c>
  # Enable expirations.
  ExpiresActive On

  # Cache all files for 2 weeks after access (A).
  ExpiresDefault A1209600

  <FilesMatch \.php$>
    # Do not allow PHP scripts to be cached unless they explicitly send cache
    # headers themselves. Otherwise all scripts would have to overwrite the
    # headers set by mod_expires if they want another caching behavior. This may
    # fail if an error occurs early in the bootstrap process, and it may cause
    # problems if a non-Drupal PHP file is installed in a subdirectory.
    ExpiresActive Off
  </FilesMatch>
</IfModule>

# Various rewrite rules.
<IfModule mod_rewrite.c>
  RewriteEngine on
# This file is included into .htaccess at the appropriate section
# in Drupal's .htaccess file (right after the RewriteEngine on
# directive. It must be included there because the file not found
# handling here must take action before the normal file not found
# handling otherwise Drupal will try to take over the 404 handling
# for static sites
#
# To add a new static site, create a sites directory just like
# you were creating a normal Drupal site and then add lines below
# for the domain to transform it to look in the site's files/html
# directory. Note that each static site needs to have a 404.php
# file to allow for correct 404 handling. Sites with multiple domain
# names should either have code added to redirect the user to the
# correct domain
#
# RewriteCond %{HTTP_HOST} ^alternate.domain$ [NC]
# RewriteRule ^/(.*)$ http://official.domain/$1 [L,R]
# Or, if the alternate domain is desired, set up the alternate domain
# sites folder but symlink sites/alternate.domain/files/html to
# sites/official.domain/files/html
#
# For www.domain variants, just capture the non www portion of the
# domain below.
#
# Each domain match added should contain [NC,OR] except the very
# last RewriteCond line before the RewriteRule.
#

# Catch our subdirectory cases where infinite symlink recursion can yield odd (but legit) URLs
# that make the GSA spider lose its mind
#RewriteCond %{REQUEST_URI} ^/dir((/dir)+)(.*)$
#RewriteRule ^.*$ /dir%3 [R=301,L]

# To get the Shield module to work properly in Acquia hosting - https://drupal.org/project/shield
RewriteRule .* - [E=REMOTE_USER:%{HTTP:Authorization}]

RewriteCond %{REQUEST_URI} =/CHANGELOG.txt [OR]
RewriteCond %{REQUEST_URI} =/COPYRIGHT.txt [OR]
RewriteCond %{REQUEST_URI} =/INSTALL.mysql.txt [OR]
RewriteCond %{REQUEST_URI} =/INSTALL.pgsql.txt [OR]
RewriteCond %{REQUEST_URI} =/INSTALL.sqlite.txt [OR]
RewriteCond %{REQUEST_URI} =/INSTALL.txt [OR]
RewriteCond %{REQUEST_URI} =/LICENSE.txt [OR]
RewriteCond %{REQUEST_URI} =/MAINTAINERS.txt [OR]
RewriteCond %{REQUEST_URI} =/PATCHES.txt [OR]
RewriteCond %{REQUEST_URI} =/README.txt [OR]
RewriteCond %{REQUEST_URI} =/UPGRADE.txt [OR]
RewriteCond %{REQUEST_URI} =/sites/all/README.txt [OR]
RewriteCond %{REQUEST_URI} =/sites/all/modules/README.txt [OR]
RewriteCond %{REQUEST_URI} =/sites/all/themes/README.txt
RewriteRule ^ - [F]

  # Set "protossl" to "s" if we were accessed via https://.  This is used later
  # if you enable "www." stripping or enforcement, in order to ensure that
  # you don't bounce between http and https.
  RewriteRule ^ - [E=protossl]
  RewriteCond %{HTTPS} on
  RewriteRule ^ - [E=protossl:s]

  # Make sure Authorization HTTP header is available to PHP
  # even when running as CGI or FastCGI.
  RewriteRule ^ - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]

  # Block access to "hidden" directories whose names begin with a period. This
  # includes directories used by version control systems such as Subversion or
  # Git to store control files. Files whose names begin with a period, as well
  # as the control files used by CVS, are protected by the FilesMatch directive
  # above.
  #
  # NOTE: This only works when mod_rewrite is loaded. Without mod_rewrite, it is
  # not possible to block access to entire directories from .htaccess, because
  # <DirectoryMatch> is not allowed here.
  #
  # If you do not have mod_rewrite installed, you should remove these
  # directories from your webroot or otherwise protect them from being
  # downloaded.
  RewriteRule "(^|/)\." - [F]

  # If your site can be accessed both with and without the 'www.' prefix, you
  # can use one of the following settings to redirect users to your preferred
  # URL, either WITH or WITHOUT the 'www.' prefix. Choose ONLY one option:
  #
  # To redirect all users to access the site WITH the 'www.' prefix,
  # (http://example.com/... will be redirected to http://www.example.com/...)
  # uncomment the following:
  # RewriteCond %{HTTP_HOST} .
  # RewriteCond %{HTTP_HOST} !^www\. [NC]
  # RewriteRule ^ http%{ENV:protossl}://www.%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

  # Redirect http://smcgov.org to http://www.smcgov.org. Don't redirect any of
  # the other subdomains, like housing.smcgov.org, etc.
  RewriteCond %{HTTP_HOST} ^smcgov\.org [NC]
  RewriteRule ^ http%{ENV:protossl}://www.%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

  # To redirect all users to access the site WITHOUT the 'www.' prefix,
  # (http://www.example.com/... will be redirected to http://example.com/...)
  # uncomment the following:
  # RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
  # RewriteRule ^ http%{ENV:protossl}://%1%{REQUEST_URI} [L,R=301]

  # Modify the RewriteBase if you are using Drupal in a subdirectory or in a
  # VirtualDocumentRoot and the rewrite rules are not working properly.
  # For example if your site is at http://example.com/drupal uncomment and
  # modify the following line:
  # RewriteBase /drupal
  #
  # If your site is running in a VirtualDocumentRoot at http://example.com/,
  # uncomment the following line:
  # RewriteBase /

  # Pass all requests not referring directly to files in the filesystem to
  # index.php. Clean URLs are handled in drupal_environment_initialize().
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteCond %{REQUEST_URI} !=/favicon.ico
  RewriteRule ^ index.php [L]

  # Rules to correctly serve gzip compressed CSS and JS files.
  # Requires both mod_rewrite and mod_headers to be enabled.
  <IfModule mod_headers.c>
    Header append Vary Authorization env=AH_NON_PRODUCTION
    # Serve gzip compressed CSS files if they exist and the client accepts gzip.
    RewriteCond %{HTTP:Accept-encoding} gzip
    RewriteCond %{REQUEST_FILENAME}\.gz -s
    RewriteRule ^(.*)\.css $1\.css\.gz [QSA]

    # Serve gzip compressed JS files if they exist and the client accepts gzip.
    RewriteCond %{HTTP:Accept-encoding} gzip
    RewriteCond %{REQUEST_FILENAME}\.gz -s
    RewriteRule ^(.*)\.js $1\.js\.gz [QSA]

    # Serve correct content types, and prevent mod_deflate double gzip.
    RewriteRule \.css\.gz$ - [T=text/css,E=no-gzip:1]
    RewriteRule \.js\.gz$ - [T=text/javascript,E=no-gzip:1]

    <FilesMatch "(\.js\.gz|\.css\.gz)$">
      # Serve correct encoding type.
      Header set Content-Encoding gzip
      # Force proxies to cache gzipped & non-gzipped css/js files separately.
      Header append Vary Accept-Encoding
    </FilesMatch>
  </IfModule>
  # Redirect the sustainability site to green.smcgov.org.
  RewriteCond %{HTTP_HOST} ^dev\.sustainability\.smcgov\.org$
  RewriteRule ^(.*)$ http://dev.green.smcgov.org%{REQUEST_URI} [L,R=301,L]
  RewriteCond %{HTTP_HOST} ^staging\.sustainability\.smcgov\.org$
  RewriteRule ^(.*)$ http://staging.green.smcgov.org%{REQUEST_URI} [L,R=301,L]
  RewriteCond %{HTTP_HOST} ^sustainability\.smcgov\.org$
  RewriteRule ^(.*)$ http://green.smcgov.org%{REQUEST_URI} [L,R=301,L]
</IfModule>

# Add headers to all responses.
<IfModule mod_headers.c>
  # Disable content sniffing, since it's an attack vector.
  Header always set X-Content-Type-Options nosniff
</IfModule>

# https://library.acquia.com/articles/microsoft-office-mime-type-support

AddType application/vnd.ms-word.document.macroEnabled.12 .docm
AddType application/vnd.openxmlformats-officedocument.wordprocessingml.document docx
AddType application/vnd.openxmlformats-officedocument.wordprocessingml.template dotx
AddType application/vnd.ms-powerpoint.template.macroEnabled.12 potm
AddType application/vnd.openxmlformats-officedocument.presentationml.template potx
AddType application/vnd.ms-powerpoint.addin.macroEnabled.12 ppam
AddType application/vnd.ms-powerpoint.slideshow.macroEnabled.12 ppsm
AddType application/vnd.openxmlformats-officedocument.presentationml.slideshow ppsx
AddType application/vnd.ms-powerpoint.presentation.macroEnabled.12 pptm
AddType application/vnd.openxmlformats-officedocument.presentationml.presentation pptx
AddType application/vnd.ms-excel.addin.macroEnabled.12 xlam
AddType application/vnd.ms-excel.sheet.binary.macroEnabled.12 xlsb
AddType application/vnd.ms-excel.sheet.macroEnabled.12 xlsm
AddType application/vnd.openxmlformats-officedocument.spreadsheetml.sheet xlsx
AddType application/vnd.ms-excel.template.macroEnabled.12 xltm
AddType application/vnd.openxmlformats-officedocument.spreadsheetml.template xltx

